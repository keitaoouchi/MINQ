{
  "rendered_body": "<p>GyroというxcdatamodelからKotlin/Java/Swiftのモデル定義コードを生成する神ツールが爆誕していたので使ってみた。<br>\n<a href=\"https://github.com/NijiDigital/gyro\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/NijiDigital/gyro</a></p>\n\n<p>xcdatamodelはMac/iOS開発者以外には馴染みがないと思うが、Appleが開発したCore Dataというデータ管理のための開発フレームワークがあり、そのデータモデル定義の成果物がxcdatamodelになると思ってもらえば良い。</p>\n\n<p>手っ取り早くQiitaのArticle、Tag、Userの関係を例にとってxcdatamodelでデータモデルを作って、gyroで吐き出されたモデルクラスをコピペするので、眺めてみていただきたい。</p>\n\n<h3>\n<span id=\"データ定義\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E5%AE%9A%E7%BE%A9\"><i class=\"fa fa-link\"></i></a>データ定義</h3>\n\n<p><strong>Relation</strong><br>\n<a href=\"https://camo.qiitausercontent.com/9678151f80e5f53f8978f711451b3dcf232b9acd/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f353830362f35373934646465352d633539622d316263392d323062662d3235646435383363336430332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"431\" alt=\"スクリーンショット 2018-03-18 19.05.53.png\" src=\"https://camo.qiitausercontent.com/9678151f80e5f53f8978f711451b3dcf232b9acd/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f353830362f35373934646465352d633539622d316263392d323062662d3235646435383363336430332e706e67\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/5794dde5-c59b-1bc9-20bf-25dd583c3d03.png\"></a></p>\n\n<p><strong>Article</strong><br>\n<a href=\"https://camo.qiitausercontent.com/d8b838bc5faeaf5d671ceb56bd1dc47dbc78eece/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f353830362f62363231613833332d633334322d653639372d373136622d6362303333333734313034372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"805\" alt=\"スクリーンショット 2018-03-18 19.04.43.png\" src=\"https://camo.qiitausercontent.com/d8b838bc5faeaf5d671ceb56bd1dc47dbc78eece/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f353830362f62363231613833332d633334322d653639372d373136622d6362303333333734313034372e706e67\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/b621a833-c342-e697-716b-cb0333741047.png\"></a></p>\n\n<p><strong>User</strong><br>\n<a href=\"https://camo.qiitausercontent.com/6700b03fd831a801fe11df171f964a5c25536ea7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f353830362f31323062306665632d643734322d356333612d383130322d6539316666616366313866612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"803\" alt=\"スクリーンショット 2018-03-18 19.05.19.png\" src=\"https://camo.qiitausercontent.com/6700b03fd831a801fe11df171f964a5c25536ea7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f353830362f31323062306665632d643734322d356333612d383130322d6539316666616366313866612e706e67\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/120b0fec-d742-5c3a-8102-e91ffacf18fa.png\"></a></p>\n\n<p><strong>Tag</strong><br>\n<a href=\"https://camo.qiitausercontent.com/7799bf448f8a3e84fd6e918d5db96c827435f9c0/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f353830362f63323464653635372d633139372d306235652d393136352d6666343162383039333235342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"804\" alt=\"スクリーンショット 2018-03-18 19.05.06.png\" src=\"https://camo.qiitausercontent.com/7799bf448f8a3e84fd6e918d5db96c827435f9c0/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f353830362f63323464653635372d633139372d306235652d393136352d6666343162383039333235342e706e67\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/c24de657-c197-0b5e-9165-ff41b8093254.png\"></a></p>\n\n<h3>\n<span id=\"コード生成\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90\"><i class=\"fa fa-link\"></i></a>コード生成</h3>\n\n<p>上記のデータ定義(Qiita.xcdatamodeld/Model.xcdatamodel)からGyroを使ってSwiftの定義ファイルを生成する。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>gyro --model Qiita.xcdatamodeld/Model.xcdatamodel --template swift3 --output Generated\n</pre></div></div>\n\n<p>生成されたコードは以下の通り。</p>\n\n<div class=\"code-frame\" data-lang=\"swift\">\n<div class=\"code-lang\"><span class=\"bold\">Article.swift</span></div>\n<div class=\"highlight\"><pre><span class=\"cm\">/* DO NOT EDIT | Generated by gyro */</span>\n\n<span class=\"kd\">import</span> <span class=\"kt\">RealmSwift</span>\n<span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">final</span> <span class=\"kd\">class</span> <span class=\"kt\">Article</span><span class=\"p\">:</span> <span class=\"nf\">Object</span> <span class=\"p\">{</span>\n\n  <span class=\"kd\">enum</span> <span class=\"kt\">Attributes</span><span class=\"p\">:</span> <span class=\"nf\">String</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"s\">\"id\"</span> <span class=\"cm\">/* Primary Key */</span>\n    <span class=\"k\">case</span> <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"s\">\"body\"</span>\n    <span class=\"k\">case</span> <span class=\"n\">commentsCount</span> <span class=\"o\">=</span> <span class=\"s\">\"commentsCount\"</span>\n    <span class=\"k\">case</span> <span class=\"n\">createdAt</span> <span class=\"o\">=</span> <span class=\"s\">\"createdAt\"</span>\n    <span class=\"k\">case</span> <span class=\"n\">likesCount</span> <span class=\"o\">=</span> <span class=\"s\">\"likesCount\"</span>\n    <span class=\"k\">case</span> <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s\">\"title\"</span>\n    <span class=\"k\">case</span> <span class=\"n\">updatedAt</span> <span class=\"o\">=</span> <span class=\"s\">\"updatedAt\"</span>\n    <span class=\"k\">case</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"url\"</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">enum</span> <span class=\"kt\">Relationships</span><span class=\"p\">:</span> <span class=\"nf\">String</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"s\">\"tags\"</span>\n    <span class=\"k\">case</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"s\">\"user\"</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">id</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span> <span class=\"cm\">/* Primary Key */</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">body</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span>\n  <span class=\"k\">let</span> <span class=\"nv\">commentsCount</span> <span class=\"o\">=</span> <span class=\"kt\">RealmOptional</span><span class=\"o\">&lt;</span><span class=\"kt\">Int64</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">createdAt</span><span class=\"p\">:</span> <span class=\"kt\">Date</span><span class=\"p\">?</span>\n  <span class=\"k\">let</span> <span class=\"nv\">likesCount</span> <span class=\"o\">=</span> <span class=\"kt\">RealmOptional</span><span class=\"o\">&lt;</span><span class=\"kt\">Int64</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">title</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">updatedAt</span><span class=\"p\">:</span> <span class=\"kt\">Date</span><span class=\"p\">?</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">url</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span>\n  <span class=\"k\">let</span> <span class=\"nv\">tags</span> <span class=\"o\">=</span> <span class=\"kt\">List</span><span class=\"o\">&lt;</span><span class=\"kt\">Tag</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">user</span><span class=\"p\">:</span> <span class=\"kt\">User</span><span class=\"p\">?</span>\n\n  <span class=\"k\">override</span> <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"nf\">primaryKey</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nf\">String</span><span class=\"p\">?</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"s\">\"id\"</span>\n  <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"swift\">\n<div class=\"code-lang\"><span class=\"bold\">User.swift</span></div>\n<div class=\"highlight\"><pre><span class=\"cm\">/* DO NOT EDIT | Generated by gyro */</span>\n\n<span class=\"kd\">import</span> <span class=\"kt\">RealmSwift</span>\n<span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">final</span> <span class=\"kd\">class</span> <span class=\"kt\">User</span><span class=\"p\">:</span> <span class=\"nf\">Object</span> <span class=\"p\">{</span>\n\n  <span class=\"kd\">enum</span> <span class=\"kt\">Attributes</span><span class=\"p\">:</span> <span class=\"nf\">String</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"s\">\"id\"</span> <span class=\"cm\">/* Primary Key */</span>\n    <span class=\"k\">case</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"name\"</span>\n    <span class=\"k\">case</span> <span class=\"n\">profileImageUrl</span> <span class=\"o\">=</span> <span class=\"s\">\"profileImageUrl\"</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">id</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span> <span class=\"cm\">/* Primary Key */</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">name</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">profileImageUrl</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span>\n\n  <span class=\"k\">let</span> <span class=\"nv\">articles</span> <span class=\"o\">=</span> <span class=\"nf\">LinkingObjects</span><span class=\"p\">(</span><span class=\"nv\">fromType</span><span class=\"p\">:</span> <span class=\"kt\">Article</span><span class=\"o\">.</span><span class=\"k\">self</span><span class=\"p\">,</span> <span class=\"nv\">property</span><span class=\"p\">:</span> <span class=\"s\">\"user\"</span><span class=\"p\">)</span>\n\n  <span class=\"k\">override</span> <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"nf\">primaryKey</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nf\">String</span><span class=\"p\">?</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"s\">\"id\"</span>\n  <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"swift\">\n<div class=\"code-lang\"><span class=\"bold\">Tag.swift</span></div>\n<div class=\"highlight\"><pre><span class=\"cm\">/* DO NOT EDIT | Generated by gyro */</span>\n\n<span class=\"kd\">import</span> <span class=\"kt\">RealmSwift</span>\n<span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">final</span> <span class=\"kd\">class</span> <span class=\"kt\">Tag</span><span class=\"p\">:</span> <span class=\"nf\">Object</span> <span class=\"p\">{</span>\n\n  <span class=\"kd\">enum</span> <span class=\"kt\">Attributes</span><span class=\"p\">:</span> <span class=\"nf\">String</span> <span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"s\">\"id\"</span> <span class=\"cm\">/* Primary Key */</span>\n    <span class=\"k\">case</span> <span class=\"n\">iconUrl</span> <span class=\"o\">=</span> <span class=\"s\">\"iconUrl\"</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">id</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span> <span class=\"cm\">/* Primary Key */</span>\n  <span class=\"kd\">@objc</span> <span class=\"kd\">dynamic</span> <span class=\"k\">var</span> <span class=\"nv\">iconUrl</span><span class=\"p\">:</span> <span class=\"kt\">String</span><span class=\"p\">?</span>\n\n  <span class=\"k\">let</span> <span class=\"nv\">articles</span> <span class=\"o\">=</span> <span class=\"nf\">LinkingObjects</span><span class=\"p\">(</span><span class=\"nv\">fromType</span><span class=\"p\">:</span> <span class=\"kt\">Article</span><span class=\"o\">.</span><span class=\"k\">self</span><span class=\"p\">,</span> <span class=\"nv\">property</span><span class=\"p\">:</span> <span class=\"s\">\"tags\"</span><span class=\"p\">)</span>\n\n  <span class=\"k\">override</span> <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"nf\">primaryKey</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nf\">String</span><span class=\"p\">?</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"s\">\"id\"</span>\n  <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"使ってみた感想\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F%E6%84%9F%E6%83%B3\"><i class=\"fa fa-link\"></i></a>使ってみた感想</h3>\n\n<ul>\n<li>データ定義を考えるときとそれをコードでゴリゴリ書いていくときとでメンタルモデルの切り替えが必要なくなる。</li>\n<li>単一のスキーマからAndroid/iOSそれぞれのモデルクラスを生成できるので生産性が良い。</li>\n<li>Xcode半強制なので紛争の可能性。実体はXMLなのでXcode必須でないが、謎XMLでスキーマ定義するぐらいならコードを書いた方がマシとなりそう。</li>\n<li>xcdatamodelはレビューしてて気持ちよくない。xcdatamodelにはGUI上での配置情報といったレビュー時にはどうでも良い情報も含まれているためノイズが混じりやすく、肝心なスキーマの変更差分がわかりづらいかもしれない。</li>\n</ul>\n\n<p>GUI特有の難点があるのでチーム開発に導入するには意見が分かれるかも。個人で使う分には非常に便利で楽しいツールなのでどんどん使っていく。</p>\n\n<p>ちなみにxcdatamodelはこんな感じのXML。</p>\n\n<div class=\"code-frame\" data-lang=\"text\">\n<div class=\"code-lang\"><span class=\"bold\">Qiita.xcdatamodeld/Model.xcdatamodel/contents</span></div>\n<div class=\"highlight\"><pre>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;\n&lt;model type=\"com.apple.IDECoreDataModeler.DataModel\" documentVersion=\"1.0\" lastSavedToolsVersion=\"13772\" systemVersion=\"17D47\" minimumToolsVersion=\"Automatic\" sourceLanguage=\"Swift\" userDefinedModelVersionIdentifier=\"\"&gt;\n    &lt;entity name=\"Article\" representedClassName=\"Article\" syncable=\"YES\" codeGenerationType=\"class\"&gt;\n        &lt;attribute name=\"body\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"commentsCount\" optional=\"YES\" attributeType=\"Integer 64\" defaultValueString=\"0\" usesScalarValueType=\"YES\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"createdAt\" optional=\"YES\" attributeType=\"Date\" usesScalarValueType=\"NO\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"id\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"likesCount\" optional=\"YES\" attributeType=\"Integer 64\" defaultValueString=\"0\" usesScalarValueType=\"YES\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"title\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"updatedAt\" optional=\"YES\" attributeType=\"Date\" usesScalarValueType=\"NO\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"url\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;relationship name=\"tags\" optional=\"YES\" toMany=\"YES\" deletionRule=\"Nullify\" destinationEntity=\"Tag\" inverseName=\"article_\" inverseEntity=\"Tag\" syncable=\"YES\"/&gt;\n        &lt;relationship name=\"user\" optional=\"YES\" maxCount=\"1\" deletionRule=\"Nullify\" destinationEntity=\"User\" inverseName=\"article_\" inverseEntity=\"User\" syncable=\"YES\"/&gt;\n        &lt;userInfo&gt;\n            &lt;entry key=\"identityAttribute\" value=\"id\"/&gt;\n        &lt;/userInfo&gt;\n    &lt;/entity&gt;\n    &lt;entity name=\"Tag\" representedClassName=\"Tag\" syncable=\"YES\" codeGenerationType=\"class\"&gt;\n        &lt;attribute name=\"iconUrl\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"id\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;relationship name=\"article_\" optional=\"YES\" toMany=\"YES\" deletionRule=\"Nullify\" destinationEntity=\"Article\" inverseName=\"tags\" inverseEntity=\"Article\" syncable=\"YES\"/&gt;\n        &lt;userInfo&gt;\n            &lt;entry key=\"identityAttribute\" value=\"id\"/&gt;\n        &lt;/userInfo&gt;\n    &lt;/entity&gt;\n    &lt;entity name=\"User\" representedClassName=\"User\" syncable=\"YES\" codeGenerationType=\"class\"&gt;\n        &lt;attribute name=\"id\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"name\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;attribute name=\"profileImageUrl\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/&gt;\n        &lt;relationship name=\"article_\" optional=\"YES\" toMany=\"YES\" deletionRule=\"Nullify\" destinationEntity=\"Article\" inverseName=\"user\" inverseEntity=\"Article\" syncable=\"YES\"/&gt;\n        &lt;userInfo&gt;\n            &lt;entry key=\"identityAttribute\" value=\"id\"/&gt;\n        &lt;/userInfo&gt;\n    &lt;/entity&gt;\n    &lt;elements&gt;\n        &lt;element name=\"Article\" positionX=\"-324\" positionY=\"-91\" width=\"128\" height=\"193\"/&gt;\n        &lt;element name=\"User\" positionX=\"-101\" positionY=\"72\" width=\"128\" height=\"103\"/&gt;\n        &lt;element name=\"Tag\" positionX=\"-101\" positionY=\"-54\" width=\"128\" height=\"90\"/&gt;\n    &lt;/elements&gt;\n&lt;/model&gt;\n</pre></div>\n</div>\n",
  "body": "GyroというxcdatamodelからKotlin/Java/Swiftのモデル定義コードを生成する神ツールが爆誕していたので使ってみた。\nhttps://github.com/NijiDigital/gyro\n\nxcdatamodelはMac/iOS開発者以外には馴染みがないと思うが、Appleが開発したCore Dataというデータ管理のための開発フレームワークがあり、そのデータモデル定義の成果物がxcdatamodelになると思ってもらえば良い。\n\n手っ取り早くQiitaのArticle、Tag、Userの関係を例にとってxcdatamodelでデータモデルを作って、gyroで吐き出されたモデルクラスをコピペするので、眺めてみていただきたい。\n\n### データ定義\n\n**Relation**\n<img width=\"431\" alt=\"スクリーンショット 2018-03-18 19.05.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/5794dde5-c59b-1bc9-20bf-25dd583c3d03.png\">\n\n**Article**\n<img width=\"805\" alt=\"スクリーンショット 2018-03-18 19.04.43.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/b621a833-c342-e697-716b-cb0333741047.png\">\n\n**User**\n<img width=\"803\" alt=\"スクリーンショット 2018-03-18 19.05.19.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/120b0fec-d742-5c3a-8102-e91ffacf18fa.png\">\n\n**Tag**\n<img width=\"804\" alt=\"スクリーンショット 2018-03-18 19.05.06.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/c24de657-c197-0b5e-9165-ff41b8093254.png\">\n\n### コード生成\n\n上記のデータ定義(Qiita.xcdatamodeld/Model.xcdatamodel)からGyroを使ってSwiftの定義ファイルを生成する。\n\n```\ngyro --model Qiita.xcdatamodeld/Model.xcdatamodel --template swift3 --output Generated\n```\n\n生成されたコードは以下の通り。\n\n```Article.swift\n/* DO NOT EDIT | Generated by gyro */\n\nimport RealmSwift\nimport Foundation\n\nfinal class Article: Object {\n\n  enum Attributes: String {\n    case id = \"id\" /* Primary Key */\n    case body = \"body\"\n    case commentsCount = \"commentsCount\"\n    case createdAt = \"createdAt\"\n    case likesCount = \"likesCount\"\n    case title = \"title\"\n    case updatedAt = \"updatedAt\"\n    case url = \"url\"\n  }\n\n  enum Relationships: String {\n    case tags = \"tags\"\n    case user = \"user\"\n  }\n\n  @objc dynamic var id: String? /* Primary Key */\n  @objc dynamic var body: String?\n  let commentsCount = RealmOptional<Int64>()\n  @objc dynamic var createdAt: Date?\n  let likesCount = RealmOptional<Int64>()\n  @objc dynamic var title: String?\n  @objc dynamic var updatedAt: Date?\n  @objc dynamic var url: String?\n  let tags = List<Tag>()\n  @objc dynamic var user: User?\n\n  override static func primaryKey() -> String? {\n    return \"id\"\n  }\n\n}\n```\n\n```User.swift\n/* DO NOT EDIT | Generated by gyro */\n\nimport RealmSwift\nimport Foundation\n\nfinal class User: Object {\n\n  enum Attributes: String {\n    case id = \"id\" /* Primary Key */\n    case name = \"name\"\n    case profileImageUrl = \"profileImageUrl\"\n  }\n\n  @objc dynamic var id: String? /* Primary Key */\n  @objc dynamic var name: String?\n  @objc dynamic var profileImageUrl: String?\n\n  let articles = LinkingObjects(fromType: Article.self, property: \"user\")\n\n  override static func primaryKey() -> String? {\n    return \"id\"\n  }\n\n}\n```\n\n```Tag.swift\n/* DO NOT EDIT | Generated by gyro */\n\nimport RealmSwift\nimport Foundation\n\nfinal class Tag: Object {\n\n  enum Attributes: String {\n    case id = \"id\" /* Primary Key */\n    case iconUrl = \"iconUrl\"\n  }\n\n  @objc dynamic var id: String? /* Primary Key */\n  @objc dynamic var iconUrl: String?\n\n  let articles = LinkingObjects(fromType: Article.self, property: \"tags\")\n\n  override static func primaryKey() -> String? {\n    return \"id\"\n  }\n\n}\n```\n\n### 使ってみた感想\n\n- データ定義を考えるときとそれをコードでゴリゴリ書いていくときとでメンタルモデルの切り替えが必要なくなる。\n- 単一のスキーマからAndroid/iOSそれぞれのモデルクラスを生成できるので生産性が良い。\n- Xcode半強制なので紛争の可能性。実体はXMLなのでXcode必須でないが、謎XMLでスキーマ定義するぐらいならコードを書いた方がマシとなりそう。\n- xcdatamodelはレビューしてて気持ちよくない。xcdatamodelにはGUI上での配置情報といったレビュー時にはどうでも良い情報も含まれているためノイズが混じりやすく、肝心なスキーマの変更差分がわかりづらいかもしれない。\n\nGUI特有の難点があるのでチーム開発に導入するには意見が分かれるかも。個人で使う分には非常に便利で楽しいツールなのでどんどん使っていく。\n\nちなみにxcdatamodelはこんな感じのXML。\n\n```Qiita.xcdatamodeld/Model.xcdatamodel/contents\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<model type=\"com.apple.IDECoreDataModeler.DataModel\" documentVersion=\"1.0\" lastSavedToolsVersion=\"13772\" systemVersion=\"17D47\" minimumToolsVersion=\"Automatic\" sourceLanguage=\"Swift\" userDefinedModelVersionIdentifier=\"\">\n    <entity name=\"Article\" representedClassName=\"Article\" syncable=\"YES\" codeGenerationType=\"class\">\n        <attribute name=\"body\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <attribute name=\"commentsCount\" optional=\"YES\" attributeType=\"Integer 64\" defaultValueString=\"0\" usesScalarValueType=\"YES\" syncable=\"YES\"/>\n        <attribute name=\"createdAt\" optional=\"YES\" attributeType=\"Date\" usesScalarValueType=\"NO\" syncable=\"YES\"/>\n        <attribute name=\"id\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <attribute name=\"likesCount\" optional=\"YES\" attributeType=\"Integer 64\" defaultValueString=\"0\" usesScalarValueType=\"YES\" syncable=\"YES\"/>\n        <attribute name=\"title\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <attribute name=\"updatedAt\" optional=\"YES\" attributeType=\"Date\" usesScalarValueType=\"NO\" syncable=\"YES\"/>\n        <attribute name=\"url\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <relationship name=\"tags\" optional=\"YES\" toMany=\"YES\" deletionRule=\"Nullify\" destinationEntity=\"Tag\" inverseName=\"article_\" inverseEntity=\"Tag\" syncable=\"YES\"/>\n        <relationship name=\"user\" optional=\"YES\" maxCount=\"1\" deletionRule=\"Nullify\" destinationEntity=\"User\" inverseName=\"article_\" inverseEntity=\"User\" syncable=\"YES\"/>\n        <userInfo>\n            <entry key=\"identityAttribute\" value=\"id\"/>\n        </userInfo>\n    </entity>\n    <entity name=\"Tag\" representedClassName=\"Tag\" syncable=\"YES\" codeGenerationType=\"class\">\n        <attribute name=\"iconUrl\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <attribute name=\"id\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <relationship name=\"article_\" optional=\"YES\" toMany=\"YES\" deletionRule=\"Nullify\" destinationEntity=\"Article\" inverseName=\"tags\" inverseEntity=\"Article\" syncable=\"YES\"/>\n        <userInfo>\n            <entry key=\"identityAttribute\" value=\"id\"/>\n        </userInfo>\n    </entity>\n    <entity name=\"User\" representedClassName=\"User\" syncable=\"YES\" codeGenerationType=\"class\">\n        <attribute name=\"id\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <attribute name=\"name\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <attribute name=\"profileImageUrl\" optional=\"YES\" attributeType=\"String\" syncable=\"YES\"/>\n        <relationship name=\"article_\" optional=\"YES\" toMany=\"YES\" deletionRule=\"Nullify\" destinationEntity=\"Article\" inverseName=\"user\" inverseEntity=\"Article\" syncable=\"YES\"/>\n        <userInfo>\n            <entry key=\"identityAttribute\" value=\"id\"/>\n        </userInfo>\n    </entity>\n    <elements>\n        <element name=\"Article\" positionX=\"-324\" positionY=\"-91\" width=\"128\" height=\"193\"/>\n        <element name=\"User\" positionX=\"-101\" positionY=\"72\" width=\"128\" height=\"103\"/>\n        <element name=\"Tag\" positionX=\"-101\" positionY=\"-54\" width=\"128\" height=\"90\"/>\n    </elements>\n</model>\n```\n",
  "coediting": false,
  "comments_count": 0,
  "created_at": "2018-03-18T19:36:14+09:00",
  "group": null,
  "id": "4dc3dae93d23594c682f",
  "likes_count": 4,
  "private": false,
  "reactions_count": 0,
  "tags": [
    {
      "name": "Xcode",
      "versions": []
    },
    {
      "name": "iOS",
      "versions": []
    },
    {
      "name": "Swift",
      "versions": []
    },
    {
      "name": "Realm",
      "versions": []
    }
  ],
  "title": "GyroでxcdatamodelからRealmのモデルクラス定義をコード生成",
  "updated_at": "2018-03-18T19:59:49+09:00",
  "url": "https://qiita.com/keitaoouchi/items/4dc3dae93d23594c682f",
  "user": {
    "description": "Naver Say Naver Again。もうレガシーコード書かないから！",
    "facebook_id": "ktoouchi",
    "followees_count": 51,
    "followers_count": 14,
    "github_login_name": "keitaoouchi",
    "id": "keitaoouchi",
    "items_count": 7,
    "linkedin_id": "",
    "location": "Tokyo, Japan",
    "name": "Keita Oouchi",
    "organization": "",
    "permanent_id": 5806,
    "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/5806/profile-images/1481159642",
    "twitter_screen_name": null,
    "website_url": ""
  },
  "page_views_count": null
}
